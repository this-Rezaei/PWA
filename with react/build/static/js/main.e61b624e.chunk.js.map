{"version":3,"sources":["Article.js","logo.svg","Home.js","App.js","reportWebVitals.js","index.js","serviceworker.js"],"names":["Article","props","state","articleList","isOffline","a","axios","get","then","response","setState","data","localStorage","setItem","JSON","stringify","catch","error","apiData","getItem","console","log","parse","className","this","border","width","map","item","id","name","Component","Home","src","logo","alt","App","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","serviceworker"],"mappings":"ySA8DeA,EA3Df,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACRC,YAAY,GACZC,WAAU,GAJA,EADvB,4FAQI,iCAAAC,EAAA,sDACgB,oCACVC,IAAMC,IADI,qCAETC,MAAK,SAAAC,GACF,EAAKC,SAAS,CACXP,YAAYM,EAASE,KAAKA,OAE7BC,aAAaC,QAAQ,WAAWC,KAAKC,UAAUN,EAASE,KAAKA,UAGhEK,OAAM,SAAAC,GACH,IAAIC,EAAUN,aAAaO,QAAQ,YACnCC,QAAQC,IAAIH,EAAQ,gBACpB,EAAKR,SAAS,CACZP,YAAaW,KAAKQ,MAAMJ,GACxBd,WAAU,OAftB,2CARJ,0EA4BI,WACI,OACI,sBAAKmB,UAAU,QAAf,UAESC,KAAKtB,MAAME,UAAY,qBAAKmB,UAAU,QAAf,qBAAqC,KAEjE,wBAAOE,OAAO,IAAd,UACA,gCACA,+BACG,oBAAIC,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,uBAGH,gCAEIF,KAAKtB,MAAMC,YAAYwB,KAAI,SAACC,GACxB,OACI,+BACI,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,SAFLF,EAAKC,mBA7C1C,GAA6BE,aCHd,MAA0B,iC,MCc1BC,MAVf,WACI,OACI,8BACI,wBAAQT,UAAU,aAAlB,SACI,qBAAKU,IAAKC,EAAMX,UAAU,WAAWY,IAAI,cCa1CC,MAhBf,WAEE,OACE,gCACE,sBAAKb,UAAU,WAAf,UACE,iCAAQ,cAAC,IAAD,CAAMc,GAAG,QAAT,oBADV,QAEE,iCAAQ,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAA2C,0BAChD,uBACD,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWP,IAC/B,cAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWvC,WCHjCwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,ICrBe,WAEX,IAAIa,EAAK,UAAMC,GAAN,UACTC,UAAUC,cAAcC,SAASJ,GAChC7C,MAAK,SAACC,GACHW,QAAQC,IAAI,kBAAkBZ,MDiBtCiD,K","file":"static/js/main.e61b624e.chunk.js","sourcesContent":["import React, { Component } from 'react' \nimport axios from 'axios';\n\nexport class Article extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n             articleList:[] ,\n             isOffline:false\n        }\n    } \n    async componentDidMount(){  \n          var url = 'http://localhost/api/article-list';\n          axios.get(url)\n          .then(response=>{\n              this.setState({\n                 articleList:response.data.data   \n              }) \n              localStorage.setItem('articles',JSON.stringify(response.data.data ))\n              \n          })\n          .catch(error=>{\n              let apiData = localStorage.getItem('articles')\n              console.log(apiData,'============')\n              this.setState({\n                articleList: JSON.parse(apiData),\n                isOffline:true  \n             })  \n          })   \n     } \n \n    render() {  \n        return ( \n            <div className=\"table\">\n                {\n                    (this.state.isOffline)? <div className=\"error\">Offline</div>:null\n                }\n                <table border=\"1\">\n                <thead>\n                <tr>\n                   <td width=\"20%\">Id</td>\n                   <td width=\"50%\">Name</td>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    this.state.articleList.map((item)=>{\n                        return (\n                            <tr key={item.id}>\n                                <td>{item.id}</td> \n                                <td>{item.name}</td> \n                            </tr>\n                        )\n                    })\n                }\n                </tbody>\n                </table> \n            </div>\n        )\n    }\n}\n\nexport default Article\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Home() {\n    return (\n        <div>\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n            </header>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport {Route,Link,Switch } from 'react-router-dom';\nimport Article from './Article';\nimport Home from './Home';  \n\nfunction App() { \n\n  return (\n    <div >\n      <div className=\"divClass\">\n        <button><Link to='/home'>Home</Link></button> &nbsp;\n        <button><Link to='/article'>Article</Link></button><br/> \n     </div><br/> \n          <Switch> \n              <Route path=\"/home\" component={Home}/>\n              <Route path=\"/article\" component={Article}/>  \n          </Switch> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router } from 'react-router-dom';\n\nimport serviceworker from './serviceworker';\n  \n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); \nserviceworker(); \n","\nexport default function serviceworker(){\n\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`\n    navigator.serviceWorker.register(swUrl)\n    .then((response)=>{\n        console.log(\"response done:-\",response)\n    })\n\n/*     if('serviceWorker' in navigator){\n\n        window.addEventListener('load',function(){\n            navigator.serviceWorker.register(swUrl)\n            .then(function(registration){\n                console.log(\"worker registration is successfull\",registration.scope);\n            },function(err){\n                console.log(\"Failed\")\n            })\n            .catch(function(err){\n                console.log(err)\n            })\n        })\n\n    }else{\n        console.log(\"Service worker is not supported\")\n    } */\n\n}"],"sourceRoot":""}